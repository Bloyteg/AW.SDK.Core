//This code was auto-generated.  It is not recommended to modify it.
//If you wish to change this code, please update the template associated with it.
using System;
using System.Runtime.InteropServices;

namespace AW
{
	partial class Instance
	{
	$events : {
	#region $it.name$
	//Declare the types to handle both the managed and native events.
	private Instance.Event managed$it.name$;
	private InterOp.Event native$it.name$;

	//Native event handler.
	private void On$it.name$()
	{
		//Passes off the event to the managed event handler.
		managed$it.name$(this);
	}

	//Managed event handler.
	/// <summary>
	/// Handles $it.sdkName$ from the C SDK.
	/// </summary>
	public event Event $it.name$
	{
		//Handles hooking a new delegate to the event.
		add
		{
			//If the event is null, set the native event for the instance.
			if (managed$it.name$ == null)
			{
				SetInstance();
				native$it.name$ = new InterOp.Event(On$it.name$);
				InterOp.aw_instance_event_set(AW_EVENT.$it.sdkName$, native$it.name$);
			}

			managed$it.name$ += value;
		}

		//Handles removing a delegate from the event.
		remove
		{
			managed$it.name$ -= value;

			//If the event is null, remove the native event for the instance.
			if (managed$it.name$ == null)
			{
				SetInstance();
				native$it.name$ = null;
				InterOp.aw_instance_event_set(AW_EVENT.$it.sdkName$, null);
			}
		}
	}
	#endregion
	}$
	}
}